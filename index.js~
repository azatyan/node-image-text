var http = require("http");
var canvas = require("canvas");
var fs = require('fs');

var Canvas = require('canvas')
  , Image = Canvas.Image
  , canvas = new Canvas(200, 200)
  , ctx = canvas.getContext('2d');


http.createServer(function (request, response){

	ctx.font = '12px Arial';
	ctx.fillText("'node-canvas extends the canvas API to provide interfacing with node, for example streaming PNG data, converting to a Buffer instance, etc. A'", 50, 100);
	ctx.stroke();

	fs.readFile(__dirname + '/images/image.png', function(err, squid){
	  if (err) throw err;
	  img = new Image;
	  img.src = squid;
	  ctx.drawImage(img, 0, 0, img.width, img.height);
	});

	var name = Math.floor(Math.random() * 60000000) + 1000000;
	name = 'public/'+name +".png";

	var out = fs.createWriteStream(name)
	  , stream = canvas.pngStream();
	stream.on('data', function(chunk){
	  out.write(chunk);
	});

	stream.on('end', function(){
	  console.log('saved png');
	});

}).listen(9999);


